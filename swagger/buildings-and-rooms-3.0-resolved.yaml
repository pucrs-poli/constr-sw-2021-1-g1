---
swagger: "2.0"
info:
  description: |
    microservice documentation for Buildings and Rooms
  version: "3.0"
  title: Buildings and Rooms
  contact:
    email: bianca.camargo@acad.pucrs.br
host: virtserver.swaggerhub.com
basePath: /biancacamargomachado/building-and-rooms/3.0
tags:
- name: buildings
  description: access to buildings' data
- name: rooms
  description: access to the rooms' data
schemes:
- https
- http
paths:
  /buildings:
    get:
      tags:
      - buildings
      summary: Finds buildings by name
      produces:
      - application/json
      parameters:
      - name: name
        in: query
        description: The buildings name
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Buildings'
        "400":
          description: Invalid status value
    post:
      tags:
      - buildings
      summary: add new buildings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: buildings's data to be stored at database
        required: true
        schema:
          $ref: '#/definitions/Buildings'
      responses:
        "200":
          description: successful operation
        "405":
          description: Invalid input
  /buildings/{buildingID}:
    get:
      tags:
      - buildings
      summary: finding buildings by its ID
      description: returns all data from the buildings
      produces:
      - application/json
      parameters:
      - name: buildingID
        in: path
        description: buildings id, from the buildings which you want all data from
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Buildings'
        "404":
          description: Buildings not found
    put:
      tags:
      - buildings
      summary: Update an existing building
      operationId: updateBuildings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Buildings object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/BuildingsEdit'
      responses:
        "201":
          description: successful operation
        "409":
          description: Building already exists
    delete:
      tags:
      - buildings
      summary: delete a buildings
      produces:
      - application/json
      parameters:
      - name: buildingID
        in: path
        description: Buildings id to delete
        required: true
        type: integer
        format: int32
      responses:
        "404":
          description: Building not found
        "204":
          description: Building deleted
    patch:
      tags:
      - buildings
      summary: Update some attributes of an existing building
      operationId: updatePartialBuildings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Buildings object that needs to be added to the data
        required: true
        schema:
          $ref: '#/definitions/BuildingsPartialEdit'
      responses:
        "404":
          description: Buildings not found
        "412":
          description: Validation exception
  /buildings/all:
    get:
      tags:
      - buildings
      summary: get all buildings
      description: get all data from all buildings
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AllBuildings'
        "400":
          description: Invalid ID supplied
        "404":
          description: Buildings not found
  /buildings/findBy:
    get:
      tags:
      - buildings
      summary: Find buildings by a complex query
      description: Returns an array of buildings
      produces:
      - application/json
      parameters:
      - name: floors
        in: query
        required: false
        type: integer
      - name: name
        in: query
        required: false
        type: string
      - name: description
        in: query
        required: false
        type: string
      - name: maxCapacity
        in: query
        required: false
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AllBuildings'
        "404":
          description: Buildings not found.
  /rooms:
    get:
      tags:
      - rooms
      summary: Finds rooms by type
      produces:
      - application/json
      parameters:
      - name: type
        in: query
        description: The rooms type
        required: true
        type: string
        enum:
        - auditorio
        - comum
        - laboratorio
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AllRooms'
        "400":
          description: Invalid status value
    post:
      tags:
      - rooms
      summary: Add new rooms
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: rooms data to be stored at database
        required: true
        schema:
          $ref: '#/definitions/Rooms'
      responses:
        "201":
          description: Room created
        "409":
          description: Room number already exists in this building.
          "404":
          description: Building ID not found.
  /rooms/{roomID}:
    get:
      tags:
      - rooms
      summary: Find rooms by its ID
      description: return all data from a rooms
      produces:
      - application/json
      parameters:
      - name: roomID
        in: path
        description: rooms id, from the rooms which you want all data.
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Rooms'
        "404":
          description: Rooms not found
    put:
      tags:
      - rooms
      summary: Update an existing room
      operationId: updateRooms
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Rooms object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/RoomsEdit'
      responses:
        "404":
          description: Rooms not found
        "421":
          description: Validation exception
    delete:
      tags:
      - rooms
      summary: Delete a rooms
      produces:
      - application/json
      parameters:
      - name: roomID
        in: path
        description: Rooms id to delete
        required: true
        type: integer
        format: int32
      responses:
        "404":
          description: Room not found
        "204":
          description: Room deleted
    patch:
      tags:
      - rooms
      summary: Update some attributes of an existing room
      operationId: updatePartialRooms
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Rooms object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/RoomsPartialEdit'
      responses:
        "404":
          description: Rooms not found
        "412":
          description: Validation exception
  /rooms/all:
    get:
      tags:
      - rooms
      summary: Get all rooms
      description: Get all data from all rooms
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AllRooms'
        "400":
          description: Invalid ID supplied
        "404":
          description: Rooms not found
  /rooms/findBy:
    get:
      tags:
      - rooms
      summary: Find rooms by a complex query
      description: Returns an array of rooms
      produces:
      - application/json
      parameters:
      - name: number
        in: query
        required: false
        type: integer
      - name: type
        in: query
        required: false
        type: string
        enum:
        - auditorio
        - comum
        - laboratorio
      - name: description
        in: query
        required: false
        type: string
      - name: maxCapacity
        in: query
        required: false
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AllBuildings'
        "404":
          description: Not found
definitions:
  AllBuildings:
    type: array
    items:
      $ref: '#/definitions/Buildings'
  Buildings:
    type: object
    required:
    - floors
    - maxCapacity
    - name
    properties:
      floors:
        type: integer
        format: int32
        example: 8
      name:
        type: string
        example: Prédio 32
      description:
        type: string
        example: Escola Politécnica da PUCRS
      maxCapacity:
        type: integer
        format: int32
        example: 5000
    xml:
      name: Buildings
  BuildingsEdit:
    type: object
    required:
    - floors
    - maxCapacity
    - name
    properties:
      floors:
        type: integer
        format: int32
        example: 8
      name:
        type: string
        example: Prédio 32
      description:
        type: string
        example: Escola Politécnica da PUCRS
      maxCapacity:
        type: integer
        format: int32
        example: 5000
    xml:
      name: Buildings
  BuildingsPartialEdit:
    type: object
    properties:
      floors:
        type: integer
        format: int32
        example: 8
      name:
        type: string
        example: Prédio 32
      description:
        type: string
        example: Escola Politécnica da PUCRS
      maxCapacity:
        type: integer
        format: int32
        example: 5000
    xml:
      name: Buildings
  RoomsEdit:
    type: object
    required:
    - maxCapacity
    - number
    - type
    properties:
      number:
        type: integer
        format: int32
        example: 104
      description:
        type: string
        example: Sala possui 2 projetores
      maxCapacity:
        type: integer
        format: int32
        example: 100
      type:
        type: string
        example: Auditório
        enum:
        - auditorio
        - comum
        - laboratorio
    xml:
      name: Rooms
  RoomsPartialEdit:
    type: object
    properties:
      number:
        type: integer
        format: int32
        example: 104
      description:
        type: string
        example: Sala possui 2 projetores
      maxCapacity:
        type: integer
        format: int32
        example: 100
      type:
        type: string
        example: Auditório
        enum:
        - auditorio
        - comum
        - laboratorio
    xml:
      name: Rooms
  AllRooms:
    type: array
    items:
      $ref: '#/definitions/Rooms'
  Rooms:
    type: object
    required:
    - maxCapacity
    - number
    - type
    properties:
      number:
        type: integer
        format: int32
        example: 104
      buildingID:
        type: integer
        format: int32
        example: 5
      description:
        type: string
        example: Sala possui 2 projetores
      maxCapacity:
        type: integer
        format: int32
        example: 100
      type:
        type: string
        example: Auditório
        enum:
        - auditorio
        - comum
        - laboratorio
    xml:
      name: Rooms
